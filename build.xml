<project name="quiltgenerator" default="compile" basedir=".">

	<property name="lib.dir" location="lib" />
	<property file="${lib.dir}/lib.properties" />
	
	<property name="base.dir" value="." />
	<property name="src.dir" value="src" />	
	<property name="build.dir" value="build" />
	<property name="dist.dir" value="dist" />
	
	<path id="commons-lang.classpath">
		<fileset dir="${commons-lang.dir}" includes="*.jar" />
	</path>

    <path id="commons-logging.classpath">
        <fileset dir="${commons-logging.dir}" includes="*.jar" />
    </path>

    <path id="hibernate-annotations.classpath">
        <fileset dir="${hibernate-annotations.dir}" includes="*.jar" />
    </path>

    <path id="hibernate.classpath">
        <fileset dir="${hibernate.dir}" includes="*.jar" />
    </path>

    <path id="spring.classpath">
        <fileset dir="${spring.dir}" includes="*.jar" />
    </path>

	<path id="main.classpath">
		<path refid="commons-lang.classpath" />
        <path refid="commons-logging.classpath" />
        <path refid="hibernate-annotations.classpath" />
        <path refid="hibernate.classpath" />
        <path refid="spring.classpath" />
		<pathelement path="${build.dir}" />
	</path>
	
	<target name="prepare">
		<tstamp />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>
	
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<target name="compile" depends="prepare">
		<javac destdir="${build.dir}" deprecation="on" debug="true">
			<classpath refid="main.classpath" />
			<src path="${src.dir}" />
		</javac>
	</target>
	
    <!-- Eeeeeesssssaaaabrooooooke
    <target name="package" depends="compile">
        <jar jarfile="${dist.dir}/swing-quilt.jar"
            basedir="${build.dir}">
            
            <manifest>
                <attribute name="Main-Class" value="com.beckproduct.quilt.panel.QuiltPanel"/>
            </manifest>
        </jar>
    </target> -->
	
	<target name="run" depends="compile">
		<run-main class="com.beckproduct.quilt.panel.QuiltPanel" />
	</target>
	
	<!-- Execute main method within a class -->
	<macrodef name="run-main">
		<attribute name="class" />
		<sequential>
			<echo>Running @{class}...</echo>
			<java classname="@{class}" fork="true" spawn="no">
				<classpath>
					<path refid="main.classpath" />
    			</classpath>
			</java>
		</sequential>
	</macrodef>
</project>


